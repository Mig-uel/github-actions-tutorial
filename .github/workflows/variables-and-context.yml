# This workflow demonstrates how to output the different context objects

name: Variables and Context

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Person to greet'
        default: 'World'
        required: true

# define env variables at the workflow level available to every job
env:
  VAR1: WORKFLOW_VAR1
  VAR2: WORKFLOW_VAR2
  VAR3: WORKFLOW_VAR3

jobs:
  job1:
    runs-on: ubuntu-latest

    steps:
      - name: Dump GitHub context

        # creating a local (just to this step) env variable
        env:
          GITHUB_CONTEXT: ${{toJson(github)}}
        run: echo "$GITHUB_CONTEXT"

  job2:
    runs-on: ubuntu-latest

    outputs:
      output1: ${{steps.step1.outputs.step1value}}
      output2: ${{steps.step2.outputs.step2value}}

    steps:
      - name: 'Step 1'
        id: step1
        # run: echo ":: set-output name=step1value::hello"
        run: echo "step1value=hello" >> $GITHUB_OUTPUT

      - name: 'Step 2'
        id: step2
        # run: echo "::set-output name=step2value::world"
        run: echo "step2value=world" >> $GITHUB_OUTPUT

  job3:
    runs-on: ubuntu-latest
    needs: job2
    steps:
      - run: echo ${{needs.job2.outputs.output1}} ${{needs.job2.outputs.output2}}

  # access/set env variables
  job4:
    runs-on: ubuntu-latest

    # define env variables at the job level, exists
    # for every step of the job but only this job
    env:
      VAR2: JOB_VAR2
      VAR3: JOB_VAR3

    steps:
      - run: |
          echo $VAR1
          echo ${{env.VAR1}}

          echo ""

          echo $VAR2

          echo $VAR3

        # can also define env variables at the step level
        env:
          VAR3: STEP_VAR3
